name: Prepare Integration Candidate

# on:
#   pull_request:
#     branches:
#       - develop

on:
  push:
    branches:
      feature/*

jobs:
  establish_changed:
    name: Establish changed packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Run Lerna changed
        run: |
          npx lerna changed --all --json | \
          npx jq 'map(.name)' > \
          changed.json
      - name: Upload changed.json
        uses: actions/upload-artifact@v1
        with:
          name: changed
          path: ./changed.json

  publish_packages_to_npm:
    name: Publish packages to NPM
    needs: establish_changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Set up NPM auth
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set \
            '//registry.npmjs.org/:_authToken' \
            "${NPM_TOKEN}"
      - name: Set up Git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name 'Jake Elder'
          git config user.email 'jake@jakes.world'
          git config user.password ${GITHUB_TOKEN}
      - name: Version
        run: |
          npx lerna version \
            --conventional-commits \
            --conventional-prerelease \
            --preid ic \
            --exact \
            --ignore-changes '**/*.md' \
            --yes
      - name: Publish
        run: npx lerna publish from-package --yes

  deploy_strapi:
    name: Deploy Strapi
    runs-on: ubuntu-latest
    needs: publish_packages_to_npm 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Pull changes
        run: git pull
      - name: Push to Heroku
        run: |
          git remote add heroku git@heroku.com:tuscany-content.git
          subtree=`
            git subtree split \
              --prefix packages/tuscany-content \
              ${GITHUB_REF}
          `
          git push --force heroku ${subtree}:master

  deploy_storybook:
    name: Deploy Storybook
    runs-on: ubuntu-latest
    needs: publish_packages_to_npm 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Get Yarn Cache Dir
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Pull changes
        run: git pull
      - name: Install NPM Deps
        run: yarn install
      - name: Build
        run: |
          npx lerna run build \
            --scope @mindfulstudio/tuscany-components \
            --stream
      - name: Deploy
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_COMPONENTS_PROJECT_ID_STAGE }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx lerna run deploy \
            --scope @mindfulstudio/tuscany-components \
            --stream

  deploy_front_end:
    name: Deploy front end
    needs: publish_packages_to_npm 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Pull changes
        run: git pull
      - name: Deploy Build
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_FRONT_END_PROJECT_ID_STAGE }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx lerna run deploy \
            --scope @mindfulstudio/tuscany-front-end \
            --stream
